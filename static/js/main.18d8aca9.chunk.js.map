{"version":3,"sources":["firebase/firebase.ts","components/TaskDetail.tsx","components/Task.tsx","components/TaskList.tsx","components/MenuSideBar/index.tsx","App.tsx","reportWebVitals.ts","state/models.ts","state/count.ts","state/task.ts","state/task-detail.ts","state/store.ts","index.tsx"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","schema","yup","shape","name","required","description","status","closingDate","dueDate","TaskDetail","useState","statusList","setStatusList","useEffect","tmp","firestore","collection","get","then","item","docs","forEach","st","push","data","taskList","useSelector","state","task","taskId","taskDetail","setTask","find","id","date","useForm","resolver","yupResolver","register","handleSubmit","formState","errors","React","Date","FormGroupStyled","type","defaultValue","getFullYear","getMonth","getDate","value","createDate","styled","div","FormControl","ButtonGroupStyled","FormContainerStyled","action","TextField","margin","label","variant","multiline","rows","select","SelectProps","native","map","InputLabelProps","shrink","Button","color","fullWidth","Task","props","taskInfo","onClick","onDelete","HeaderStyled","CardActionsStyled","CardActions","Card","style","borderLeft","marginBottom","CardActionArea","CardContent","padding","Typography","gutterBottom","component","className","size","border","TaskList","history","useHistory","dispatch","useDispatch","setTaskDetails","event","currentTarget","setTaskDetail","a","taskDeleteId","where","ref","delete","alert","catch","error","result","index","MenuContainerstyled","useStyles","makeStyles","theme","createStyles","root","width","backgroundColor","palette","background","paper","nested","paddingLeft","spacing","MenuSideBar","classes","open","setOpen","List","aria-labelledby","subheader","ListSubheader","ListItem","button","ListItemIcon","ListItemText","primary","Collapse","in","timeout","unmountOnExit","disablePadding","App","taskList2","setTaskList2","deleteId","setDeleteId","fetchTaskList","TaskListControlStyled","path","Grid","container","sm","xs","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","models","count","createModel","multiplierName","reducers","increment","payload","effects","incrementAsync","setTaskAsync","setTaskDetailAsync","store","init","plugins","loadingPlugin","updatedPlugin","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.18d8aca9.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\nimport \"firebase/firestore\";\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBAOv_OpEob1jmHeTJVzuibBUOgMHd_2yw\",\r\n  authDomain: \"example-1b332.firebaseapp.com\",\r\n  projectId: \"example-1b332\",\r\n  storageBucket: \"example-1b332.appspot.com\",\r\n  messagingSenderId: \"715215332219\",\r\n  appId: \"1:715215332219:web:8fd13802d86680827193de\",\r\n  measurementId: \"G-DLRHSHX21T\",\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n// export { firestore };\r\nexport default firebase;\r\n","import { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { Button, FormControl, Grid, TextField } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport nextId from \"react-id-generator\";\r\nimport { useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport * as yup from \"yup\";\r\nimport firebase from \"../firebase/firebase\";\r\nimport { RootState } from \"../state/store\";\r\nimport { TaskInfo, Status } from \"../types/task\";\r\n\r\nconst schema = yup.object().shape({\r\n  name: yup.string().required(\"Vui long nhap truong nay\"),\r\n  description: yup.string().required(\"Vui long nhap truong nay\"),\r\n  status: yup.number().required(\"Vui long nhap truong nay\"),\r\n  // createDate: yup.string().required(\"Vui long nhap truong nay\"),\r\n  closingDate: yup.string().required(\"Vui long nhap truong nay\"),\r\n  dueDate: yup.string().required(\"Vui long nhap truong nay\"),\r\n});\r\n\r\nexport const TaskDetail = (): JSX.Element => {\r\n  const onSubmit = (data: TaskInfo) => {\r\n    const id = nextId();\r\n    const { status, name, description, createDate, dueDate, closingDate } =\r\n      data;\r\n\r\n    firebase.firestore().collection(\"tasks\").add({\r\n      id,\r\n      status,\r\n      name,\r\n      description,\r\n      createDate,\r\n      dueDate,\r\n      closingDate,\r\n    });\r\n  };\r\n\r\n  const [statusList, setStatusList] = useState<Status[]>([]);\r\n\r\n  useEffect(() => {\r\n    let tmp: Status[] = [];\r\n    firebase\r\n      .firestore()\r\n      .collection(\"status\")\r\n      .get()\r\n      .then((item) => {\r\n        item.docs.forEach((st) => {\r\n          tmp.push(st.data() as unknown as Status);\r\n        });\r\n      });\r\n    setStatusList(tmp);\r\n  }, []);\r\n\r\n  const taskList = useSelector((state: RootState) => state.task);\r\n  const taskId = useSelector(\r\n    (state: RootState) => state.taskDetail.taskId\r\n  ) as string;\r\n  const [task, setTask] = useState<TaskInfo>(taskList[0]);\r\n\r\n  useEffect(() => {\r\n    if (taskList && taskId) {\r\n      const tmp = taskList.find((item) => item.id === taskId) || taskList[0];\r\n      setTask(tmp);\r\n    }\r\n  }, [taskId, taskList]);\r\n\r\n  const dateToString = (date: Date): string => {\r\n    return date.getFullYear() + \"-\" + date.getMonth() + \"-\" + date.getDate();\r\n  };\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm<TaskInfo>({\r\n    resolver: yupResolver(schema),\r\n  });\r\n\r\n  const [selectedDate, setSelectedDate] = React.useState<Date | null>(\r\n    new Date(\"2014-08-18T21:11:54\")\r\n  );\r\n\r\n  const handleDateChange = (date: Date | null) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const style = {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  };\r\n\r\n  const NameProps = {\r\n    ...register(\"name\"),\r\n    type: \"text\",\r\n    defaultValue: task.name,\r\n  };\r\n  const DesciptionProps = {\r\n    ...register(\"description\"),\r\n    type: \"text\",\r\n    // value: task.description,\r\n    defaultValue: task.description,\r\n  };\r\n  const StatusProps = {\r\n    ...register(\"status\"),\r\n    type: \"number\",\r\n  };\r\n  const CreateDateProps = {\r\n    ...register(\"createDate\"),\r\n    type: \"date\",\r\n    defaultValue: dateToString(new Date()),\r\n    value: task.createDate,\r\n  };\r\n  const ClosingDateProps = {\r\n    ...register(\"closingDate\"),\r\n    type: \"date\",\r\n    defaultValue: task.closingDate,\r\n  };\r\n  const DueDateProps = {\r\n    ...register(\"dueDate\"),\r\n    type: \"date\",\r\n    defaultValue: task.dueDate,\r\n  };\r\n\r\n  const ErrorStyled = styled.div`\r\n    color: red;\r\n    margin: 0;\r\n  `;\r\n\r\n  const FormGroupStyled = styled(FormControl)`\r\n    width: 100%;\r\n  `;\r\n\r\n  const ButtonGroupStyled = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    button {\r\n      width: 23%;\r\n    }\r\n  `;\r\n\r\n  const FormContainerStyled = styled.div`\r\n    height: 100vh;\r\n    padding: 10px;\r\n    box-shadow: 5px 10px 8px 10px #888888;\r\n  `;\r\n\r\n  return (\r\n    <FormContainerStyled>\r\n      <form action=\"\">\r\n        <FormGroupStyled>\r\n          <TextField\r\n            margin=\"dense\"\r\n            // error\r\n            // helperText=\"required\"\r\n            id=\"taskName\"\r\n            label=\"Task Name\"\r\n            variant=\"filled\"\r\n            multiline\r\n            value={task.name}\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"taskDesciption\"\r\n            label=\"Task Desciption\"\r\n            multiline\r\n            rows={7}\r\n            variant=\"filled\"\r\n            value={task.description}\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"taskStatus\"\r\n            label=\"Task Status\"\r\n            variant=\"filled\"\r\n            select\r\n            value={task.status}\r\n            SelectProps={{ native: true }}\r\n          >\r\n            {statusList.map((item) => (\r\n              <option value={item.value} key={item.value}>\r\n                {item.label}\r\n              </option>\r\n            ))}\r\n          </TextField>\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"createDate\"\r\n            label=\"Create date\"\r\n            type=\"date\"\r\n            variant=\"filled\"\r\n            defaultValue=\"2017-05-24\"\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"closedDate\"\r\n            label=\"Closed date\"\r\n            type=\"date\"\r\n            variant=\"filled\"\r\n            defaultValue=\"2017-05-24\"\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"dueDate\"\r\n            label=\"Due date\"\r\n            type=\"date\"\r\n            variant=\"filled\"\r\n            defaultValue=\"2017-05-24\"\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n          />\r\n        </FormGroupStyled>\r\n        {taskId ? (\r\n          <ButtonGroupStyled>\r\n            <Button variant=\"contained\" color=\"default\">\r\n              Open\r\n            </Button>\r\n            <Button variant=\"contained\" color=\"inherit\">\r\n              Doing\r\n            </Button>\r\n            <Button variant=\"contained\" color=\"secondary\">\r\n              Done\r\n            </Button>\r\n            <Button variant=\"contained\" color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n          </ButtonGroupStyled>\r\n        ) : (\r\n          <Button variant=\"contained\" fullWidth color=\"secondary\">\r\n            Submit\r\n          </Button>\r\n        )}\r\n      </form>\r\n    </FormContainerStyled>\r\n  );\r\n};\r\n","import {\r\n  Button,\r\n  Card,\r\n  CardActionArea,\r\n  CardActions,\r\n  CardContent,\r\n  Typography,\r\n  Collapse,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { TaskInfo } from \"../types/task\";\r\nimport \"./general.css\";\r\n\r\ntype TaskProps = {\r\n  taskInfo: TaskInfo;\r\n  onClick: (event: React.MouseEvent<HTMLElement>) => void;\r\n  onDelete: (event: React.MouseEvent<HTMLElement>) => void;\r\n};\r\n\r\nexport const Task = (props: TaskProps): JSX.Element => {\r\n  const {\r\n    taskInfo: { id, name, status, description },\r\n    onClick,\r\n    onDelete,\r\n  } = props;\r\n\r\n  const HeaderStyled = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n      align-items: center;\r\n      span{\r\n        color:red;\r\n        font-weight:bold;\r\n      }\r\n    }\r\n  `;\r\n\r\n  const CardActionsStyled = styled(CardActions)`\r\n    .hehe: {\r\n      margin-top: 0;\r\n    }\r\n  `;\r\n\r\n  return (\r\n    <Card style={{ borderLeft: \"10px solid green\", marginBottom: \"5px\" }}>\r\n      <CardActionArea>\r\n        <CardContent style={{ padding: \"0 10px\" }} id={id} onClick={onClick}>\r\n          <HeaderStyled>\r\n            <Typography\r\n              style={{ padding: 0 }}\r\n              gutterBottom\r\n              variant=\"h5\"\r\n              component=\"h2\"\r\n            >\r\n              {name}\r\n            </Typography>\r\n            <span>{status}</span>\r\n          </HeaderStyled>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            {description}\r\n          </Typography>\r\n        </CardContent>\r\n        <CardActionsStyled>\r\n          <Button\r\n            className=\"hehe\"\r\n            size=\"small\"\r\n            color=\"primary\"\r\n            style={{ border: \"1px solid orange\" }}\r\n            onClick={onDelete}\r\n          >\r\n            Delete\r\n          </Button>\r\n        </CardActionsStyled>\r\n      </CardActionArea>\r\n    </Card>\r\n  );\r\n};\r\n","import { Pagination } from \"antd\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport firebase from \"../firebase/firebase\";\r\nimport { Dispatch } from \"../state/store\";\r\nimport { TaskInfo } from \"../types/task\";\r\nimport { Task } from \"./Task\";\r\n\r\ntype TaskListProps = {\r\n  taskList: TaskInfo[];\r\n};\r\n\r\nexport const TaskList = (props: TaskListProps): JSX.Element => {\r\n  const history = useHistory();\r\n  const { taskList } = props;\r\n  const dispatch = useDispatch<Dispatch>();\r\n\r\n  const setTaskDetails = (event: React.MouseEvent<HTMLElement>) => {\r\n    const {\r\n      currentTarget: { id },\r\n    } = event;\r\n    dispatch.taskDetail.setTaskDetail({ taskId: id });\r\n  };\r\n\r\n  const onDelete = async (event: React.MouseEvent<HTMLElement>) => {\r\n    const {\r\n      currentTarget: { id },\r\n    } = event;\r\n    dispatch.taskDetail.setTaskDetail({ taskDeleteId: id });\r\n\r\n    await firebase\r\n      .firestore()\r\n      .collection(\"tasks\")\r\n      .where(\"id\", \"==\", id)\r\n      .get()\r\n      .then((item) => {\r\n        item.docs[0].ref.delete();\r\n        alert(\"OKEKE\");\r\n      })\r\n      .catch((error) => {\r\n        alert(\"Khong xao duwoc\");\r\n      });\r\n    history.push(\"/dfd\");\r\n  };\r\n\r\n  const result = taskList.map((item, index) => {\r\n    return (\r\n      <Task\r\n        onDelete={onDelete}\r\n        onClick={setTaskDetails}\r\n        key={index}\r\n        taskInfo={item}\r\n      />\r\n    );\r\n  });\r\n  return (\r\n    <>\r\n      <div className=\"list-group\">{result}</div>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\r\nimport DraftsIcon from \"@material-ui/icons/Drafts\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\r\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\r\nimport StarBorder from \"@material-ui/icons/StarBorder\";\r\nimport styled from \"styled-components\";\r\n\r\nconst MenuContainerstyled = styled.div`\r\n  width: 100%;\r\n  height: 100vh;\r\n  background: #E1EBEB;\r\n`;\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: \"100%\",\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n    nested: {\r\n      paddingLeft: theme.spacing(4),\r\n    },\r\n  })\r\n);\r\n\r\nexport const MenuSideBar = () => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n\r\n  const handleClick = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  return (\r\n    <MenuContainerstyled>\r\n      <List\r\n        style={{ background: \"#E1EBEB\" }}\r\n        component=\"nav\"\r\n        aria-labelledby=\"nested-list-subheader\"\r\n        subheader={\r\n          <ListSubheader component=\"div\" id=\"nested-list-subheader\">\r\n            Nested List Items\r\n          </ListSubheader>\r\n        }\r\n        className={classes.root}\r\n      >\r\n        <ListItem button>\r\n          <ListItemIcon>\r\n            <SendIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Sent mail\" />\r\n        </ListItem>\r\n        <ListItem button>\r\n          <ListItemIcon>\r\n            <DraftsIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Drafts\" />\r\n        </ListItem>\r\n        <ListItem button onClick={handleClick}>\r\n          <ListItemIcon>\r\n            <InboxIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Inbox\" />\r\n          {open ? <ExpandLess /> : <ExpandMore />}\r\n        </ListItem>\r\n        <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n          <List component=\"div\" disablePadding>\r\n            <ListItem button className={classes.nested}>\r\n              <ListItemIcon>\r\n                <StarBorder />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Starred\" />\r\n            </ListItem>\r\n          </List>\r\n        </Collapse>\r\n      </List>\r\n    </MenuContainerstyled>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport { TaskDetail } from \"./components/TaskDetail\";\r\nimport { TaskList } from \"./components/TaskList\";\r\n// import { TaskManage } from \"./components/TaskManage\";\r\nimport \"./task.css\";\r\nimport firebase from \"./firebase/firebase\";\r\nimport { TaskInfo } from \"./types/task\";\r\nimport { ButtonBase, Grid, Button } from \"@material-ui/core\";\r\nimport { MenuSideBar } from \"./components/MenuSideBar\";\r\n// import styled from \"styled-components\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Dispatch, RootState } from \"./state/store\";\r\nimport { PlusSquareOutlined } from \"@ant-design/icons\";\r\nimport styled from \"styled-components\";\r\n\r\nfunction App() {\r\n  // const [taskInfoList, setTaskInfoList] = useState<TaskInfo[]>([]);\r\n  // useEffect(() => {\r\n  //   const apiUrl = \"http://localhost:8080/task\";\r\n\r\n  //   fetch(apiUrl)\r\n  //     .then((result) => result.json())\r\n  //     .then((rs) => {\r\n  //       setTaskInfoList(rs as TaskInfo[]);\r\n  //     });\r\n  // }, []);\r\n\r\n  // const dataTmp: TaskInfo[] = [\r\n  //   {\r\n  //     id: \"1\",\r\n  //     status: 1,\r\n  //     name: \"Create save filter\",\r\n  //     description: \"323\",\r\n  //     createDate: \"2021-01-02\",\r\n  //     dueDate: \"2021-01-03\",\r\n  //   },\r\n  //   {\r\n  //     id: \"2\",\r\n  //     status: 2,\r\n  //     name: \"Create test script search filter edit\",\r\n  //     description: \"323\",\r\n  //     createDate: \"2021-01-02\",\r\n  //     dueDate: \"2021-01-03\",\r\n  //   },\r\n  //   {\r\n  //     id: \"3\",\r\n  //     status: 3,\r\n  //     name: \"Update component filter target edit\",\r\n  //     description: \"323\",\r\n  //     createDate: \"2021-01-02\",\r\n  //     dueDate: \"2021-01-03\",\r\n  //   },\r\n  //   {\r\n  //     id: \"4\",\r\n  //     status: 4,\r\n  //     name: \"Create document study spec\",\r\n  //     description: \"Ta\",\r\n  //     createDate: \"2021-01-02\",\r\n  //     dueDate: \"2021-01-03\",\r\n  //   },\r\n  //   {\r\n  //     id: \"5\",\r\n  //     status: 4,\r\n  //     name: \"Create document study spec\",\r\n  //     description: \"Ta\",\r\n  //     createDate: \"2021-01-02\",\r\n  //     dueDate: \"2021-01-03\",\r\n  //   },\r\n  //   {\r\n  //     id: \"6\",\r\n  //     status: 4,\r\n  //     name: \"Create document study spec\",\r\n  //     description: \"Ta\",\r\n  //     createDate: \"2021-01-02\",\r\n  //     dueDate: \"2021-01-03\",\r\n  //   },\r\n  //   {\r\n  //     id: \"7\",\r\n  //     status: 4,\r\n  //     name: \"Create document study spec\",\r\n  //     description: \"Ta\",\r\n  //     createDate: \"2021-01-02\",\r\n  //     dueDate: \"2021-01-03\",\r\n  //   },\r\n  //   {\r\n  //     id: \"8\",\r\n  //     status: 4,\r\n  //     name: \"Create document study spec\",\r\n  //     description: \"Ta\",\r\n  //     createDate: \"2021-01-02\",\r\n  //     dueDate: \"2021-01-03\",\r\n  //   },\r\n  //   {\r\n  //     id: \"9\",\r\n  //     status: 4,\r\n  //     name: \"Create document study spec\",\r\n  //     description: \"Ta\",\r\n  //     createDate: \"2021-01-02\",\r\n  //     dueDate: \"2021-01-03\",\r\n  //   },\r\n  // ];\r\n\r\n  // const deleteTodo = () => {\r\n  //   firebase\r\n  //     .firestore()\r\n  //     .collection(\"tasks\")\r\n  //     .where(\"id\", \"==\", \"1\")\r\n  //     .get()\r\n  //     .then((item) => {\r\n  //       item.docs[0].ref.delete();\r\n  //     });\r\n  //   firebase.database().ref(\"messages\");\r\n  // };\r\n\r\n  // const addToto = () => {\r\n  //   dataTmp.forEach((item) => {\r\n  //     const { createDate, description, dueDate, id, name, status } = item;\r\n  //     firebase.firestore().collection(\"tasks\").add({\r\n  //       id,\r\n  //       status,\r\n  //       name,\r\n  //       description,\r\n  //       createDate,\r\n  //       dueDate,\r\n  //       closingDate: \"\",\r\n  //     });\r\n  //   });\r\n  // };\r\n\r\n  const dataTmp = [\r\n    { value: \"doing\", label: \"Doing\" },\r\n    { value: \"done\", label: \"Done\" },\r\n    { value: \"closed\", label: \"Close\" },\r\n    { value: \"open\", label: \"open\" },\r\n  ];\r\n\r\n  const addToto = () => {\r\n    dataTmp.forEach((item) => {\r\n      const { label, value } = item;\r\n      firebase.firestore().collection(\"status\").add({\r\n        value,\r\n        label,\r\n      });\r\n    });\r\n  };\r\n\r\n  const [taskList2, setTaskList2] = useState<TaskInfo[]>([]);\r\n  // const taskList = useSelector((state: RootState) => state.task);\r\n\r\n  const taskDeleteId = useSelector(\r\n    (state: RootState) => state.taskDetail.taskId\r\n  ) as string;\r\n\r\n  const [deleteId, setDeleteId] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setDeleteId(taskDeleteId);\r\n    let tmp: TaskInfo[] = [];\r\n    firebase\r\n      .firestore()\r\n      .collection(\"tasks\")\r\n      .get()\r\n      .then((item) => {\r\n        // const hehe = item.docs as unknown as TaskInfo[];\r\n        item.docs.forEach((task) => {\r\n          tmp.push(task.data() as unknown as TaskInfo);\r\n        });\r\n        setTaskList2(tmp);\r\n      });\r\n  }, [deleteId, taskDeleteId]);\r\n\r\n  const dispatch = useDispatch<Dispatch>();\r\n\r\n  useEffect(() => {\r\n    if (taskList2) {\r\n      dispatch.task.fetchTaskList(taskList2);\r\n    }\r\n  }, [dispatch, taskList2, deleteId, taskDeleteId]);\r\n\r\n  const setTaskDetailAddTask = () => {\r\n    dispatch.taskDetail.setTaskDetail({ taskId: \"\" });\r\n  };\r\n\r\n  const TaskListControlStyled = styled.div`\r\n    padding: 5px;\r\n    button {\r\n      margin-top: 10px;\r\n    }\r\n  `;\r\n\r\n  return (\r\n    // <Box className=\"App\">\r\n    //   <TaskList taskList={taskInfoList} />\r\n    // </Box>\r\n    <Router>\r\n      <Switch>\r\n        <Route path=\"/\">\r\n          {/* <button onClick={addToto}>ADD TODO</button> */}\r\n          {/* <button onClick={deleteTodo}>Delete TODO</button> */}\r\n\r\n          <Grid container>\r\n            <Grid item sm={2}>\r\n              <MenuSideBar />\r\n            </Grid>\r\n            <Grid item sm={6} xs={12}>\r\n              <TaskListControlStyled>\r\n                <TaskList taskList={taskList2} />\r\n                <Button\r\n                  variant=\"contained\"\r\n                  fullWidth\r\n                  onClick={setTaskDetailAddTask}\r\n                  color=\"primary\"\r\n                >\r\n                  Add task\r\n                </Button>\r\n              </TaskListControlStyled>\r\n            </Grid>\r\n            <Grid item sm={4} xs={12}>\r\n              <TaskDetail />\r\n            </Grid>\r\n          </Grid>\r\n          {/* <TaskManage /> */}\r\n        </Route>\r\n        <Route path=\"/task\">\r\n          <TaskList taskList={taskList2} />\r\n        </Route>\r\n        <Route path=\"/task-detail/:taskId\">\r\n          <TaskDetail />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { Models } from '@rematch/core'\r\nimport { count } from './count'\r\nimport { task } from './task'\r\nimport { taskDetail } from './task-detail'\r\n\r\nexport interface RootModel extends Models<RootModel> {\r\n    count: typeof count;\r\n    task: typeof task;\r\n    taskDetail: typeof taskDetail;\r\n}\r\n\r\nexport const models: RootModel = { count, task, taskDetail }","import { createModel } from '@rematch/core'\r\nimport { RootModel } from './models'\r\n\r\ntype Names = 'custom'\r\ntype ComplexCount = {\r\n    count: number;\r\n    multiplierName: Names;\r\n}\r\n\r\nexport const count = createModel<RootModel>()({\r\n    state: {\r\n        count: 0,\r\n        multiplierName: 'custom'\r\n    } as ComplexCount, // <-\r\n    reducers: {\r\n        increment(state, payload: number) {\r\n            return {\r\n                count: state.count + payload,\r\n                multiplierName: \"custom\"\r\n            }\r\n        },\r\n    },\r\n    effects: (dispatch) => ({\r\n        async incrementAsync(payload: number, state) {\r\n            dispatch.count.increment(payload)\r\n        },\r\n    }),\r\n});","import { createModel } from \"@rematch/core\";\r\nimport { RootModel } from \"./models\";\r\nimport { TaskInfo } from \"../types/task\";\r\n\r\nexport const task = createModel<RootModel>()({\r\n  state: [{ id: \"\", name: \"\", description: \"\" }] as TaskInfo[], // <-\r\n  reducers: {\r\n    fetchTaskList(state, payload: TaskInfo[]) {\r\n      return payload;\r\n    },\r\n  },\r\n  effects: (dispatch) => ({\r\n    async setTaskAsync(payload: TaskInfo[]) {\r\n      dispatch.task.fetchTaskList(payload);\r\n    },\r\n  }),\r\n});\r\n","import { createModel } from \"@rematch/core\";\r\nimport { RootModel } from \"./models\";\r\n\r\ntype TaskDetail = {\r\n  taskId?: string;\r\n  taskDeleteId?: string;\r\n};\r\n\r\nexport const taskDetail = createModel<RootModel>()({\r\n  state: { taskId: \"\", taskDeleteId: \"\" } as TaskDetail,\r\n  reducers: {\r\n    setTaskDetail(state, payload: TaskDetail) {\r\n      return {\r\n        ...state,\r\n        taskId: payload.taskId,\r\n        taskDeleteId: payload.taskDeleteId,\r\n      };\r\n    },\r\n  },\r\n  effects: (dispatch) => ({\r\n    async setTaskDetailAsync(payload: TaskDetail) {\r\n      dispatch.taskDetail.setTaskDetail(payload);\r\n    },\r\n  }),\r\n});\r\n","import { init, RematchDispatch, RematchRootState } from '@rematch/core'\r\nimport { models, RootModel } from './models'\r\n\r\n/** Plugins **/\r\nimport updatedPlugin, { ExtraModelsFromUpdated } from '@rematch/updated'\r\nimport loadingPlugin, { ExtraModelsFromLoading } from '@rematch/loading'\r\n\r\ntype FullModel = ExtraModelsFromLoading<RootModel> & ExtraModelsFromUpdated<RootModel>\r\n\r\nexport const store = init<RootModel, FullModel>({\r\n    models,\r\n    plugins: [\r\n        loadingPlugin(),\r\n        updatedPlugin(),\r\n    ]\r\n})\r\n\r\nexport type Store = typeof store\r\nexport type Dispatch = RematchDispatch<RootModel>\r\nexport type RootState = RematchRootState<RootModel>","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux'\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { store } from \"./state/store\"\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}