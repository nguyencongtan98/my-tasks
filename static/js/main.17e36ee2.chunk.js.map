{"version":3,"sources":["firebase/firebase.ts","components/TaskDetail.tsx","components/Task.tsx","components/TaskList.tsx","components/Menu/index.tsx","App.tsx","reportWebVitals.ts","state/models.ts","state/count.ts","state/task.ts","state/task-detail.ts","state/store.ts","index.tsx"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","schema","yup","shape","name","required","description","status","closingDate","dueDate","TaskDetail","taskList","useSelector","state","task","taskId","taskDetail","useState","setTask","useEffect","tmp","find","item","id","dateToString","date","getFullYear","getMonth","getDate","console","log","Date","useForm","resolver","yupResolver","register","handleSubmit","errors","formState","style","display","flexDirection","NameProps","type","value","DesciptionProps","defaultValue","StatusProps","CreateDateProps","ClosingDateProps","DueDateProps","ErrorStyled","styled","div","Typography","variant","onSubmit","data","nextId","createDate","firestore","collection","add","aria-label","sx","message","rows","htmlFor","Task","props","taskInfo","onClick","onDelete","statusText","bgColor","textAlign","background","fontWeight","ml","mb","mr","pl","height","lineHeight","borderRadius","cursor","width","pr","size","hidden","TaskList","history","useHistory","dispatch","useDispatch","setTaskDetails","event","currentTarget","setTaskDetail","a","taskDeleteId","where","get","then","docs","ref","delete","alert","catch","error","push","result","map","index","Panel","Collapse","PanelStyled","LinkStyle","Link","MenuStyled","MenuSideBar","ghost","defaultActiveKey","header","App","taskList2","setTaskList2","deleteId","setDeleteId","forEach","fetchTaskList","path","Grid","container","sm","xs","icon","PlusSquareOutlined","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","models","count","createModel","multiplierName","reducers","increment","payload","effects","incrementAsync","setTaskAsync","setTaskDetailAsync","store","init","plugins","loadingPlugin","updatedPlugin","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.17e36ee2.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\nimport \"firebase/firestore\";\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBAOv_OpEob1jmHeTJVzuibBUOgMHd_2yw\",\r\n  authDomain: \"example-1b332.firebaseapp.com\",\r\n  projectId: \"example-1b332\",\r\n  storageBucket: \"example-1b332.appspot.com\",\r\n  messagingSenderId: \"715215332219\",\r\n  appId: \"1:715215332219:web:8fd13802d86680827193de\",\r\n  measurementId: \"G-DLRHSHX21T\",\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n// export { firestore };\r\nexport default firebase;\r\n","import { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Box, Flex } from \"rebass\";\r\nimport styled from \"styled-components\";\r\nimport * as yup from \"yup\";\r\nimport { RootState } from \"../state/store\";\r\nimport firebase from \"../firebase/firebase\";\r\nimport { TaskInfo } from \"../types/task\";\r\nimport nextId from \"react-id-generator\";\r\n\r\nconst schema = yup.object().shape({\r\n  name: yup.string().required(\"Vui long nhap truong nay\"),\r\n  description: yup.string().required(\"Vui long nhap truong nay\"),\r\n  status: yup.number().required(\"Vui long nhap truong nay\"),\r\n  // createDate: yup.string().required(\"Vui long nhap truong nay\"),\r\n  closingDate: yup.string().required(\"Vui long nhap truong nay\"),\r\n  dueDate: yup.string().required(\"Vui long nhap truong nay\"),\r\n});\r\n\r\nexport const TaskDetail = (): JSX.Element => {\r\n  const onSubmit = (data: TaskInfo) => {\r\n    const id = nextId();\r\n    const { status, name, description, createDate, dueDate, closingDate } =\r\n      data;\r\n\r\n    firebase.firestore().collection(\"tasks\").add({\r\n      id,\r\n      status,\r\n      name,\r\n      description,\r\n      createDate,\r\n      dueDate,\r\n      closingDate,\r\n    });\r\n  };\r\n  const taskList = useSelector((state: RootState) => state.task);\r\n  const taskId = useSelector(\r\n    (state: RootState) => state.taskDetail.taskId\r\n  ) as string;\r\n  const [task, setTask] = useState<TaskInfo>(taskList[0]);\r\n\r\n  useEffect(() => {\r\n    if (taskList && taskId) {\r\n      const tmp = taskList.find((item) => item.id === taskId) || taskList[0];\r\n      setTask(tmp);\r\n    }\r\n  }, [taskId, taskList]);\r\n\r\n  const dateToString = (date: Date): string => {\r\n    return date.getFullYear() + \"-\" + date.getMonth() + \"-\" + date.getDate();\r\n  };\r\n\r\n  console.log(dateToString(new Date()));\r\n  console.log(\"2021-7-27\");\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm<TaskInfo>({\r\n    resolver: yupResolver(schema),\r\n  });\r\n\r\n  const style = {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  };\r\n\r\n  const NameProps = {\r\n    ...register(\"name\"),\r\n    type: \"text\",\r\n    value: \"fdfdfdf\",\r\n  };\r\n  const DesciptionProps = {\r\n    ...register(\"description\"),\r\n    type: \"text\",\r\n    // value: task.description,\r\n    defaultValue: task.description,\r\n  };\r\n  const StatusProps = {\r\n    ...register(\"status\"),\r\n    type: \"number\",\r\n  };\r\n  const CreateDateProps = {\r\n    ...register(\"createDate\"),\r\n    type: \"date\",\r\n    defaultValue: dateToString(new Date()),\r\n  };\r\n  const ClosingDateProps = {\r\n    ...register(\"closingDate\"),\r\n    type: \"date\",\r\n  };\r\n  const DueDateProps = {\r\n    ...register(\"dueDate\"),\r\n    type: \"date\",\r\n  };\r\n\r\n  const ErrorStyled = styled.div`\r\n    color: red;\r\n    margin: 0;\r\n  `;\r\n\r\n  return (\r\n    <Box>\r\n      <Typography variant=\"h5\">{task?.name}</Typography>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <Box aria-label=\"Task header\" sx={style}>\r\n          <Box sx={style}>\r\n            <label>Name</label>\r\n            <input {...NameProps} />\r\n            <ErrorStyled>{errors.name?.message}</ErrorStyled>\r\n          </Box>\r\n          <Box sx={style}>\r\n            <label>Desciption</label>\r\n            <textarea rows={5} {...DesciptionProps} />\r\n            <ErrorStyled>{errors.description?.message}</ErrorStyled>\r\n          </Box>\r\n          <Box sx={style}>\r\n            <label>Status</label>\r\n            <input {...StatusProps} />\r\n            <ErrorStyled>{errors.status?.message}</ErrorStyled>\r\n          </Box>\r\n          <Box sx={style}>\r\n            <label htmlFor=\"\">Create Date</label>\r\n            <input\r\n              {...CreateDateProps}\r\n              // value={createDate as string}\r\n              value={task?.createDate}\r\n              // disabled={!!1}\r\n            />\r\n            <ErrorStyled>{errors.createDate?.message}</ErrorStyled>\r\n          </Box>\r\n          <Box sx={style}>\r\n            <label htmlFor=\"\">Closing Date</label>\r\n            <input {...ClosingDateProps} />\r\n            <ErrorStyled>{errors.closingDate?.message}</ErrorStyled>\r\n          </Box>\r\n          <Box sx={style}>\r\n            <label htmlFor=\"\">Due Date</label>\r\n            <input {...DueDateProps} />\r\n            <ErrorStyled>{errors.dueDate?.message}</ErrorStyled>\r\n          </Box>\r\n          <Flex>\r\n            {taskId ? (\r\n              <Box>\r\n                <button type=\"submit\">Inprogress</button>\r\n                <button type=\"submit\">Done</button>\r\n                <button type=\"submit\">Cancel</button>\r\n                <button type=\"submit\">Cancel</button>\r\n              </Box>\r\n            ) : (\r\n              <Box>\r\n                <button type=\"submit\">Add new task</button>\r\n              </Box>\r\n            )}\r\n          </Flex>\r\n        </Box>\r\n      </form>\r\n    </Box>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Box, Flex } from \"rebass\";\r\nimport { Button } from \"antd\";\r\nimport { TaskInfo } from \"../types/task\";\r\nimport \"./general.css\";\r\n\r\ntype TaskProps = {\r\n  taskInfo: TaskInfo;\r\n  onClick: (event: React.MouseEvent<HTMLElement>) => void;\r\n  onDelete: (event: React.MouseEvent<HTMLElement>) => void;\r\n};\r\n\r\nexport const Task = (props: TaskProps): JSX.Element => {\r\n  const {\r\n    taskInfo: { id, name, status },\r\n    onClick,\r\n    onDelete,\r\n  } = props;\r\n\r\n  let statusText = \"\";\r\n  let bgColor = \"d\";\r\n\r\n  switch (status) {\r\n    case 1:\r\n      statusText = \"Open\";\r\n      bgColor = \"#6d24e3\";\r\n      break;\r\n    case 2:\r\n      statusText = \"Doing\";\r\n      bgColor = \"#dbbd5a\";\r\n      break;\r\n    case 3:\r\n      statusText = \"Done\";\r\n      bgColor = \"#9fe09d\";\r\n      break;\r\n    case 4:\r\n      statusText = \"Cancel\";\r\n      bgColor = \"darkGray\";\r\n      break;\r\n    case 5:\r\n      statusText = \"Re Open\";\r\n      bgColor = \"6d24e3\";\r\n      break;\r\n\r\n    default:\r\n      break;\r\n  }\r\n\r\n  return (\r\n    <Flex\r\n      id={id}\r\n      onClick={onClick}\r\n      sx={{\r\n        textAlign: \"left\",\r\n        background: bgColor,\r\n        fontWeight: \"bold\",\r\n        ml: \"5px\",\r\n        mb: \"5px\",\r\n        mr: \"20px\",\r\n        pl: \"5px\",\r\n        height: \"50px\",\r\n        lineHeight: \"50px\",\r\n        borderRadius: \"5px\",\r\n        \":hover\": { background: \"grey\", cursor: \"pointer\" },\r\n      }}\r\n    >\r\n      {/* <Link to={`/task-detail/${id}`} id={id} onClick={onClick}>{name}</Link> */}\r\n      <Box width=\"80%\">{name}</Box>\r\n      <Box width=\"20%\" pr=\"10px\" textAlign=\"right\">\r\n        <Button size=\"small\" id={id} onClick={onDelete}>\r\n          Delete\r\n        </Button>\r\n        <p hidden>{statusText}</p>\r\n      </Box>\r\n    </Flex>\r\n  );\r\n};\r\n","import { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport firebase from \"../firebase/firebase\";\r\nimport { Dispatch } from \"../state/store\";\r\nimport { TaskInfo } from \"../types/task\";\r\nimport { Task } from \"./Task\";\r\n\r\ntype TaskListProps = {\r\n  taskList: TaskInfo[];\r\n};\r\n\r\nexport const TaskList = (props: TaskListProps): JSX.Element => {\r\n  const history = useHistory();\r\n  const { taskList } = props;\r\n  const dispatch = useDispatch<Dispatch>();\r\n\r\n  const setTaskDetails = (event: React.MouseEvent<HTMLElement>) => {\r\n    const {\r\n      currentTarget: { id },\r\n    } = event;\r\n    dispatch.taskDetail.setTaskDetail({ taskId: id });\r\n  };\r\n\r\n  const onDelete = async (event: React.MouseEvent<HTMLElement>) => {\r\n    const {\r\n      currentTarget: { id },\r\n    } = event;\r\n    dispatch.taskDetail.setTaskDetail({ taskDeleteId: id });\r\n\r\n    await firebase\r\n      .firestore()\r\n      .collection(\"tasks\")\r\n      .where(\"id\", \"==\", id)\r\n      .get()\r\n      .then((item) => {\r\n        item.docs[0].ref.delete();\r\n        alert(\"OKEKE\");\r\n      })\r\n      .catch((error) => {\r\n        alert(\"Khong xao duwoc\");\r\n      });\r\n    history.push(\"/dfd\");\r\n  };\r\n\r\n  const result = taskList.map((item, index) => {\r\n    return (\r\n      <Task\r\n        onDelete={onDelete}\r\n        onClick={setTaskDetails}\r\n        key={index}\r\n        taskInfo={item}\r\n      />\r\n    );\r\n  });\r\n  return <>{result}</>;\r\n};\r\n","import { Collapse, Typography } from \"antd\";\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst { Panel } = Collapse;\r\nconst PanelStyled = styled(Panel)`\r\n  &&& {\r\n    .ant-collapse-header,\r\n    p {\r\n      color: white;\r\n    }\r\n    .ant-collapse-content-box,\r\n    p {\r\n      padding: 0 40px;\r\n    }\r\n\r\n    .add-room {\r\n      color: white;\r\n      padding: 0;\r\n    }\r\n  }\r\n`;\r\n\r\nconst LinkStyle = styled(Typography.Link)`\r\n  display: block;\r\n  margin-bottom: 5px;\r\n  color: white;\r\n`;\r\n\r\nconst MenuStyled = styled.div`\r\n  background: #8f570a;\r\n  color: white;\r\n  height: 100vh;\r\n`;\r\n\r\nexport const MenuSideBar = () => {\r\n  return (\r\n    <MenuStyled>\r\n      <Collapse ghost defaultActiveKey={[\"1\"]}>\r\n        <PanelStyled header=\"List Room\" key=\"1\">\r\n          <LinkStyle>Room 1</LinkStyle>\r\n          <LinkStyle>Room 2</LinkStyle>\r\n          <LinkStyle>Room 3</LinkStyle>\r\n        </PanelStyled>\r\n      </Collapse>\r\n    </MenuStyled>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport { TaskDetail } from \"./components/TaskDetail\";\r\nimport { TaskList } from \"./components/TaskList\";\r\n// import { TaskManage } from \"./components/TaskManage\";\r\nimport \"./task.css\";\r\nimport firebase from \"./firebase/firebase\";\r\nimport { TaskInfo } from \"./types/task\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { MenuSideBar } from \"./components/Menu\";\r\n// import styled from \"styled-components\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Dispatch, RootState } from \"./state/store\";\r\nimport { Button } from \"antd\";\r\nimport { PlusSquareOutlined } from \"@ant-design/icons\";\r\n\r\nfunction App() {\r\n  // const [taskInfoList, setTaskInfoList] = useState<TaskInfo[]>([]);\r\n  // useEffect(() => {\r\n  //   const apiUrl = \"http://localhost:8080/task\";\r\n\r\n  //   fetch(apiUrl)\r\n  //     .then((result) => result.json())\r\n  //     .then((rs) => {\r\n  //       setTaskInfoList(rs as TaskInfo[]);\r\n  //     });\r\n  // }, []);\r\n\r\n  // const dataTmp: TaskInfo[] = [\r\n  //   {\r\n  //     id: \"1\",\r\n  //     status: 1,\r\n  //     name: \"Create save filter\",\r\n  //     description: \"323\",\r\n  //     createDate: \"2021-01-02\",\r\n  //     dueDate: \"2021-01-03\",\r\n  //   },\r\n  //   {\r\n  //     id: \"2\",\r\n  //     status: 2,\r\n  //     name: \"Create test script search filter edit\",\r\n  //     description: \"323\",\r\n  //     createDate: \"2021-01-02\",\r\n  //     dueDate: \"2021-01-03\",\r\n  //   },\r\n  //   {\r\n  //     id: \"3\",\r\n  //     status: 3,\r\n  //     name: \"Update component filter target edit\",\r\n  //     description: \"323\",\r\n  //     createDate: \"2021-01-02\",\r\n  //     dueDate: \"2021-01-03\",\r\n  //   },\r\n  //   {\r\n  //     id: \"4\",\r\n  //     status: 4,\r\n  //     name: \"Create document study spec\",\r\n  //     description: \"Ta\",\r\n  //     createDate: \"2021-01-02\",\r\n  //     dueDate: \"2021-01-03\",\r\n  //   },\r\n  //   {\r\n  //     id: \"5\",\r\n  //     status: 4,\r\n  //     name: \"Create document study spec\",\r\n  //     description: \"Ta\",\r\n  //     createDate: \"2021-01-02\",\r\n  //     dueDate: \"2021-01-03\",\r\n  //   },\r\n  //   {\r\n  //     id: \"6\",\r\n  //     status: 4,\r\n  //     name: \"Create document study spec\",\r\n  //     description: \"Ta\",\r\n  //     createDate: \"2021-01-02\",\r\n  //     dueDate: \"2021-01-03\",\r\n  //   },\r\n  //   {\r\n  //     id: \"7\",\r\n  //     status: 4,\r\n  //     name: \"Create document study spec\",\r\n  //     description: \"Ta\",\r\n  //     createDate: \"2021-01-02\",\r\n  //     dueDate: \"2021-01-03\",\r\n  //   },\r\n  //   {\r\n  //     id: \"8\",\r\n  //     status: 4,\r\n  //     name: \"Create document study spec\",\r\n  //     description: \"Ta\",\r\n  //     createDate: \"2021-01-02\",\r\n  //     dueDate: \"2021-01-03\",\r\n  //   },\r\n  //   {\r\n  //     id: \"9\",\r\n  //     status: 4,\r\n  //     name: \"Create document study spec\",\r\n  //     description: \"Ta\",\r\n  //     createDate: \"2021-01-02\",\r\n  //     dueDate: \"2021-01-03\",\r\n  //   },\r\n  // ];\r\n\r\n  // const deleteTodo = () => {\r\n  //   firebase\r\n  //     .firestore()\r\n  //     .collection(\"tasks\")\r\n  //     .where(\"id\", \"==\", \"1\")\r\n  //     .get()\r\n  //     .then((item) => {\r\n  //       item.docs[0].ref.delete();\r\n  //     });\r\n  //   firebase.database().ref(\"messages\");\r\n  // };\r\n\r\n  // const addToto = () => {\r\n  //   dataTmp.forEach((item) => {\r\n  //     const { createDate, description, dueDate, id, name, status } = item;\r\n  //     firebase.firestore().collection(\"tasks\").add({\r\n  //       id,\r\n  //       status,\r\n  //       name,\r\n  //       description,\r\n  //       createDate,\r\n  //       dueDate,\r\n  //       closingDate: \"\",\r\n  //     });\r\n  //   });\r\n  // };\r\n\r\n  const [taskList2, setTaskList2] = useState<TaskInfo[]>([]);\r\n  // const taskList = useSelector((state: RootState) => state.task);\r\n\r\n  const taskDeleteId = useSelector(\r\n    (state: RootState) => state.taskDetail.taskId\r\n  ) as string;\r\n\r\n  const [deleteId, setDeleteId] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setDeleteId(taskDeleteId);\r\n    let tmp: TaskInfo[] = [];\r\n    firebase\r\n      .firestore()\r\n      .collection(\"tasks\")\r\n      .get()\r\n      .then((item) => {\r\n        // const hehe = item.docs as unknown as TaskInfo[];\r\n        item.docs.forEach((task) => {\r\n          tmp.push(task.data() as unknown as TaskInfo);\r\n        });\r\n        setTaskList2(tmp);\r\n      });\r\n  }, [deleteId, taskDeleteId]);\r\n\r\n  const dispatch = useDispatch<Dispatch>();\r\n\r\n  useEffect(() => {\r\n    if (taskList2) {\r\n      dispatch.task.fetchTaskList(taskList2);\r\n    }\r\n  }, [dispatch, taskList2, deleteId, taskDeleteId]);\r\n\r\n  const setTaskDetailAddTask = () => {\r\n    dispatch.taskDetail.setTaskDetail({ taskId: \"\" });\r\n  };\r\n\r\n  return (\r\n    // <Box className=\"App\">\r\n    //   <TaskList taskList={taskInfoList} />\r\n    // </Box>\r\n    <Router>\r\n      <Switch>\r\n        <Route path=\"/\">\r\n          {/* <button onClick={addToto}>ADD TODO</button> */}\r\n          {/* <button onClick={deleteTodo}>Delete TODO</button> */}\r\n          <Grid container>\r\n            <Grid item sm={3} xs={12}>\r\n              <MenuSideBar />\r\n            </Grid>\r\n            <Grid item sm={5} xs={12}>\r\n              <TaskList taskList={taskList2} />\r\n              <Button\r\n                type=\"text\"\r\n                icon={<PlusSquareOutlined />}\r\n                className=\"add-room\"\r\n                onClick={setTaskDetailAddTask}\r\n              >\r\n                Add task\r\n              </Button>\r\n            </Grid>\r\n            <Grid item sm={4} xs={12}>\r\n              <TaskDetail />\r\n            </Grid>\r\n          </Grid>\r\n          {/* <TaskManage /> */}\r\n        </Route>\r\n        <Route path=\"/task\">\r\n          <TaskList taskList={taskList2} />\r\n        </Route>\r\n        <Route path=\"/task-detail/:taskId\">\r\n          <TaskDetail />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { Models } from '@rematch/core'\r\nimport { count } from './count'\r\nimport { task } from './task'\r\nimport { taskDetail } from './task-detail'\r\n\r\nexport interface RootModel extends Models<RootModel> {\r\n    count: typeof count;\r\n    task: typeof task;\r\n    taskDetail: typeof taskDetail;\r\n}\r\n\r\nexport const models: RootModel = { count, task, taskDetail }","import { createModel } from '@rematch/core'\r\nimport { RootModel } from './models'\r\n\r\ntype Names = 'custom'\r\ntype ComplexCount = {\r\n    count: number;\r\n    multiplierName: Names;\r\n}\r\n\r\nexport const count = createModel<RootModel>()({\r\n    state: {\r\n        count: 0,\r\n        multiplierName: 'custom'\r\n    } as ComplexCount, // <-\r\n    reducers: {\r\n        increment(state, payload: number) {\r\n            return {\r\n                count: state.count + payload,\r\n                multiplierName: \"custom\"\r\n            }\r\n        },\r\n    },\r\n    effects: (dispatch) => ({\r\n        async incrementAsync(payload: number, state) {\r\n            dispatch.count.increment(payload)\r\n        },\r\n    }),\r\n});","import { createModel } from \"@rematch/core\";\r\nimport { RootModel } from \"./models\";\r\nimport { TaskInfo } from \"../types/task\";\r\n\r\nexport const task = createModel<RootModel>()({\r\n  state: [{ id: \"\", name: \"\", description: \"\" }] as TaskInfo[], // <-\r\n  reducers: {\r\n    fetchTaskList(state, payload: TaskInfo[]) {\r\n      return payload;\r\n    },\r\n  },\r\n  effects: (dispatch) => ({\r\n    async setTaskAsync(payload: TaskInfo[]) {\r\n      dispatch.task.fetchTaskList(payload);\r\n    },\r\n  }),\r\n});\r\n","import { createModel } from \"@rematch/core\";\r\nimport { RootModel } from \"./models\";\r\n\r\ntype TaskDetail = {\r\n  taskId?: string;\r\n  taskDeleteId?: string;\r\n};\r\n\r\nexport const taskDetail = createModel<RootModel>()({\r\n  state: { taskId: \"\", taskDeleteId: \"\" } as TaskDetail,\r\n  reducers: {\r\n    setTaskDetail(state, payload: TaskDetail) {\r\n      return {\r\n        ...state,\r\n        taskId: payload.taskId,\r\n        taskDeleteId: payload.taskDeleteId,\r\n      };\r\n    },\r\n  },\r\n  effects: (dispatch) => ({\r\n    async setTaskDetailAsync(payload: TaskDetail) {\r\n      dispatch.taskDetail.setTaskDetail(payload);\r\n    },\r\n  }),\r\n});\r\n","import { init, RematchDispatch, RematchRootState } from '@rematch/core'\r\nimport { models, RootModel } from './models'\r\n\r\n/** Plugins **/\r\nimport updatedPlugin, { ExtraModelsFromUpdated } from '@rematch/updated'\r\nimport loadingPlugin, { ExtraModelsFromLoading } from '@rematch/loading'\r\n\r\ntype FullModel = ExtraModelsFromLoading<RootModel> & ExtraModelsFromUpdated<RootModel>\r\n\r\nexport const store = init<RootModel, FullModel>({\r\n    models,\r\n    plugins: [\r\n        loadingPlugin(),\r\n        updatedPlugin(),\r\n    ]\r\n})\r\n\r\nexport type Store = typeof store\r\nexport type Dispatch = RematchDispatch<RootModel>\r\nexport type RootState = RematchRootState<RootModel>","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux'\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { store } from \"./state/store\"\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}